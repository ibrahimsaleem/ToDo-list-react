{"version":3,"sources":["componets/todo.js","componets/todoform.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","_ref","todo","index","markTodo","removeTodo","react_default","a","createElement","className","style","textDecoration","isDone","text","Button","size","variant","onClick","FormTodo","addTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","todos","setTodos","newTodos","toConsumableArray","splice","concat","map","Card","Body","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8bc45743.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default \nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button size=\"30\" variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n      </div>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport { Button, Form } from 'react-bootstrap';\n\nexport default function FormTodo({ addTodo }) {\n    const [value, setValue] = React.useState(\"\");\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      setValue(\"\");\n    };\n  \n    return (\n      <div className=\"head\">\n      <Form onSubmit={handleSubmit}> \n      <Form.Group>\n        <Form.Label><b>My To-Do List</b></Form.Label>\n        <br></br>\n        <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new Task\" />\n      </Form.Group>\n      <Button type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n    </div>\n    );\n  }","\nimport React from \"react\";\nimport \"./App.css\";\nimport { Card } from 'react-bootstrap';\nimport Todo from \"./componets/todo\";\nimport FormTodo from \"./componets/todoform\";\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a sampe todo made by Ibrahim Saleem\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}